# This ingress exists to tie a static IP address to the cluster's ingress without having to interact with GCP APIs
# by using the platform's built in support for annotations
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: istio-dummy-ingress
  namespace: istio-system
  annotations:
    kubernetes.io/ingress.global-static-ip-name: "cluster-b-ingress"
spec:
  rules:
  - host: istio.io
    http:
      paths:
      - path: /
        backend:
          serviceName: blackhole
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: test-server
  labels:
    app: test-server
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: test-server
    spec:
      containers:
      - name: test-server
        image: gcr.io/google.com/zbutcher-test/test-server
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        - containerPort: 81
        args:
        - --server-port=80
        - --health-port=81
        - --liveness-port=81
        # update to make the health check return unhealthy
        - --healthy=true
        # update to make liveness checks take longer before returning a 200
        - --liveness-delay=0s
        livenessProbe:
          httpGet:
            path: /live
            port: 81
          initialDelaySeconds: 5
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 81
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: test-server
  labels:
    app: test-server
    version: v1
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
  - name: http-health
    port: 81
  selector:
    app: test-server
---
###########################################################
#### Generated by github.com/ZackButcher/join-clusters ####
###########################################################
apiVersion: networking.istio.io/v1alpha3
kind: ServiceEntry
metadata:
  name: a-ingress
spec:
  hosts:
    - "*.svc.a.remote"
  ports: 
  - number: 443
    name: HTTPS
    protocol: HTTPS
  - number: 80
    name: HTTP
    protocol: HTTP	
  resolution: STATIC
  endpoints:
  # TODO: update to real IP
  - address: 35.197.54.77
    ports:
      HTTPS: 443
      HTTP: 80
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: a-virtual-service
spec:
  hosts:
  - "*.svc.a.remote"
  http:
  - match:
    - port: 80
    route:
    - destination:
        host: a-ingress
  tcp:
  - match:
    - port: 443
    route:
    - destination:
        host: a-ingress